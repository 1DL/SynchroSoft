/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.TextSize;
import dao.DaoEndereco;
import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Endereco;

/**
 *
 * @author Luiz
 */
public class FrmCadastroEndereco extends javax.swing.JFrame {

    private boolean cepExiste;

    /**
     * Creates new form FrmCadastroPeca
     */
    public FrmCadastroEndereco(int nvlAdm) {
        initComponents();
        inicializarTabela();
        if (nvlAdm == 0) {
            btnCadastrar.setEnabled(false);
        }
        selecionarAoFocar();
    }

    public FrmCadastroEndereco(int nvlAdm, String cep) {
        initComponents();
        inicializarTabela();
        if (nvlAdm == 0) {
            btnCadastrar.setEnabled(false);
        }
        selecionarAoFocar();
        txtfCep.setText(cep);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMenuPrincipal = new javax.swing.JButton();
        btnFecharFrame = new javax.swing.JButton();
        panPrincipal = new javax.swing.JPanel();
        btnListarEndereco = new javax.swing.JButton();
        lblCep = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        lblLogradouro = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblQuantidadePeca = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        cmbEstado = new javax.swing.JComboBox<>();
        Bairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblCepExiste = new javax.swing.JLabel();
        txtfCep = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnderecoRecente = new javax.swing.JTable();
        lblEnderecoRecente = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Endereço");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/logopng32.png")));
        setMinimumSize(new java.awt.Dimension(1152, 648));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        getContentPane().setLayout(null);

        btnMenuPrincipal.setText("Menu Principal");
        btnMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuPrincipalActionPerformed(evt);
            }
        });
        getContentPane().add(btnMenuPrincipal);
        btnMenuPrincipal.setBounds(900, 550, 130, 30);

        btnFecharFrame.setText("Fechar ");
        btnFecharFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharFrameActionPerformed(evt);
            }
        });
        getContentPane().add(btnFecharFrame);
        btnFecharFrame.setBounds(1055, 550, 80, 30);

        panPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panPrincipal.setOpaque(false);
        panPrincipal.setLayout(null);

        btnListarEndereco.setText("Listar Endereços");
        btnListarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarEnderecoActionPerformed(evt);
            }
        });
        panPrincipal.add(btnListarEndereco);
        btnListarEndereco.setBounds(435, 10, 111, 30);

        lblCep.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCep.setText("CEP:");
        panPrincipal.add(lblCep);
        lblCep.setBounds(10, 10, 140, 25);

        txtLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLogradouroKeyReleased(evt);
            }
        });
        panPrincipal.add(txtLogradouro);
        txtLogradouro.setBounds(170, 50, 376, 25);

        lblLogradouro.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblLogradouro.setText("Logradouro:");
        panPrincipal.add(lblLogradouro);
        lblLogradouro.setBounds(10, 50, 140, 25);

        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCidadeKeyReleased(evt);
            }
        });
        panPrincipal.add(txtCidade);
        txtCidade.setBounds(739, 50, 316, 25);

        lblQuantidadePeca.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQuantidadePeca.setText("Cidade:");
        panPrincipal.add(lblQuantidadePeca);
        lblQuantidadePeca.setBounds(595, 50, 140, 25);

        lblEstado.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblEstado.setText("Estado:");
        panPrincipal.add(lblEstado);
        lblEstado.setBounds(595, 10, 140, 25);

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        panPrincipal.add(btnLimpar);
        btnLimpar.setBounds(595, 90, 100, 30);

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setNextFocusableComponent(txtfCep);
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        panPrincipal.add(btnCadastrar);
        btnCadastrar.setBounds(739, 90, 130, 30);

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SP", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cmbEstado.setNextFocusableComponent(txtLogradouro);
        panPrincipal.add(cmbEstado);
        cmbEstado.setBounds(739, 10, 95, 25);

        Bairro.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        Bairro.setText("Bairro:");
        panPrincipal.add(Bairro);
        Bairro.setBounds(10, 90, 140, 25);

        txtBairro.setNextFocusableComponent(btnCadastrar);
        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBairroKeyReleased(evt);
            }
        });
        panPrincipal.add(txtBairro);
        txtBairro.setBounds(170, 90, 376, 25);

        lblCepExiste.setForeground(new java.awt.Color(255, 0, 0));
        lblCepExiste.setText("CEP Inválido.");
        panPrincipal.add(lblCepExiste);
        lblCepExiste.setBounds(301, 10, 130, 25);

        try {
            txtfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtfCep.setNextFocusableComponent(cmbEstado);
        txtfCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfCepFocusLost(evt);
            }
        });
        txtfCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfCepKeyReleased(evt);
            }
        });
        panPrincipal.add(txtfCep);
        txtfCep.setBounds(170, 10, 127, 25);

        getContentPane().add(panPrincipal);
        panPrincipal.setBounds(10, 10, 1125, 130);

        tblEnderecoRecente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblEnderecoRecente);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 170, 1125, 370);

        lblEnderecoRecente.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblEnderecoRecente.setText("Endereços Cadastrados Recentemente:");
        getContentPane().add(lblEnderecoRecente);
        lblEnderecoRecente.setBounds(10, 140, 350, 25);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fundo.png"))); // NOI18N
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, -20, 1150, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnListarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarEnderecoActionPerformed
        control.Janelas.abrirListagemEndereco();
    }//GEN-LAST:event_btnListarEnderecoActionPerformed

    private void btnFecharFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharFrameActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharFrameActionPerformed

    private void txtBairroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyReleased
        txtBairro.setText(TextSize.maxLenghtBairro(txtBairro.getText()));
    }//GEN-LAST:event_txtBairroKeyReleased

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        cadastrarEndereco();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void txtCidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyReleased
        txtCidade.setText(TextSize.maxLenghtCidade(txtCidade.getText()));
    }//GEN-LAST:event_txtCidadeKeyReleased

    private void txtLogradouroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLogradouroKeyReleased
        txtLogradouro.setText(TextSize.maxLenghtLogradouro(txtLogradouro.getText()));
    }//GEN-LAST:event_txtLogradouroKeyReleased

    private void btnMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuPrincipalActionPerformed
        control.Janelas.focarPrincipal();
    }//GEN-LAST:event_btnMenuPrincipalActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtfCepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCepKeyReleased
        verificarCepExistente();
    }//GEN-LAST:event_txtfCepKeyReleased

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        verificarCepExistente();
    }//GEN-LAST:event_formFocusGained

    private void txtfCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfCepFocusLost
        verificarCepExistente();
    }//GEN-LAST:event_txtfCepFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroEndereco(control.SynchroSoft.getNvlAdm()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bairro;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnFecharFrame;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnListarEndereco;
    private javax.swing.JButton btnMenuPrincipal;
    private javax.swing.JComboBox<String> cmbEstado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCepExiste;
    private javax.swing.JLabel lblEnderecoRecente;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblLogradouro;
    private javax.swing.JLabel lblQuantidadePeca;
    private javax.swing.JPanel panPrincipal;
    private javax.swing.JTable tblEnderecoRecente;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JFormattedTextField txtfCep;
    // End of variables declaration//GEN-END:variables

    private void verificarCepExistente() {
        String aux = txtfCep.getText();
        aux = aux.replace("-", "");
        aux = aux.trim();
        cepExiste = dao.DaoEndereco.existeEndereco(aux);
        if (cepExiste) {
            lblCepExiste.setText("CEP já cadastrado.");
            lblCepExiste.setForeground(Color.red);
        } else if (aux.length() == 8) {
            lblCepExiste.setText("CEP Disponível.");
            lblCepExiste.setForeground(Color.black);
        } else {
            lblCepExiste.setText("CEP Inválido.");
            lblCepExiste.setForeground(Color.red);
        }
    }

    private boolean validarCampos() {
        if (txtfCep.getText().length() < 9) {
            JOptionPane.showMessageDialog(null, "CEP Inválido. \n\bPreencha o campo de CEP corretamente, com 8 números.", "Erro - CPF Inválido", 0);
            txtfCep.requestFocus();
            return false;
        } else if (txtfCep.getText().trim().length() < 9) {
            JOptionPane.showMessageDialog(null, "CEP Inválido. \n\nPreencha o campo de CEP corretamente, com 8 dígitos.", "Erro - CPF Inválido", 0);
            txtfCep.requestFocus();
            return false;
        } else if (cepExiste) {
            JOptionPane.showMessageDialog(null, "CEP Inválido. \n\nO CEP informado já está cadastrado.", "Erro - CPF Inválido", 0);
            txtfCep.requestFocus();
            return false;
        } else if (txtLogradouro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Logradouro em branco. \n\nInforme o nome da rua/avenida corretamente.", "Erro - Logradouro Inválido", 0);
            txtLogradouro.requestFocus();
            return false;
        } else if (txtCidade.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Cidade em branco. \n\nInforme o nome da Cidade.", "Erro - Cidade Inválida", 0);
            txtCidade.requestFocus();
            return false;
        } else if (txtBairro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bairro em branco. \n\nInforme o nome do bairro.", "Erro - Bairro Inválido", 0);
            txtBairro.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    private void limpar() {
        txtBairro.setText("");
        txtfCep.setText("");
        txtCidade.setText("");
        txtLogradouro.setText("");
        cmbEstado.setSelectedIndex(0);
        verificarCepExistente();
    }

    private void inicializarTabela() {
        String[] nomeColunas = {"CEP", "Logradouro", "Bairro", "Cidade", "Estado", "PK_REF"};
        try {
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    if (column == 6) {
                        return false;
                    }
                    return true;
                }
            };
            tblEnderecoRecente.setModel(model);
            model.setColumnIdentifiers(nomeColunas);
            model.setRowCount(0);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao popular tabela de cadastros recentes.\n\n" + ex.getMessage(), "Erro ao popular tabela", 0);
        }
        tblEnderecoRecente.getColumnModel().getColumn(0).setMaxWidth(300);

        tblEnderecoRecente.getColumnModel().getColumn(4).setMaxWidth(50);
        tblEnderecoRecente.getColumnModel().getColumn(5).setMinWidth(0);
        tblEnderecoRecente.getColumnModel().getColumn(5).setPreferredWidth(0);
        tblEnderecoRecente.getColumnModel().getColumn(5).setMaxWidth(0);
    }

    private void atualizarTabela(Endereco end) {
        Object rowData[] = new Object[6];

        rowData[0] = end.getCep();
        rowData[1] = end.getLogradouro();
        rowData[2] = end.getBairro();
        rowData[3] = end.getCidade();
        rowData[4] = end.getEstado();
        rowData[5] = end.getCep();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblEnderecoRecente.getModel();
        model.addRow(rowData);
    }

    private void selecionarAoFocar() {
        //Código para selecionar o texto todo ao ganhar foco
        txtfCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtfCep.selectAll();
                    }
                });
            }
        });
    }

    private void cadastrarEndereco() {
        if (validarCampos()) {
            Endereco end = new Endereco(txtfCep.getText().replace("-", ""),
                    txtLogradouro.getText(), txtBairro.getText(), txtCidade.getText(),
                    (String) cmbEstado.getSelectedItem());
            try {
                boolean aux = DaoEndereco.cadastrarEndereco(end);
                if (aux) {
                    atualizarTabela(end);
                    verificarCepExistente();
                }
                txtfCep.requestFocus();
            } catch (Exception ex) {
                JOptionPane.showConfirmDialog(null, "Erro ao cadastrar Endereço.\n\n " + ex.getMessage(), "Erro de cadastro.", JOptionPane.ERROR_MESSAGE);
            }
        }
    }   
}
