/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.TextSize;
import dao.DaoOrcamento;
import dao.DaoProduto;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Orcamento;
import model.Produto;
import model.Servico;
import model.VendaPeca;

/**
 *
 * @author Luiz
 */
public class FrmCadastroOrcamento extends javax.swing.JFrame {

    /**
     * Creates new form FrmCadastroOrcamento
     */
    public FrmCadastroOrcamento(int nvlAdm) {
        initComponents();
        iniciarTabela();
        selecionarAoFocar();
        if (nvlAdm == 0) {
            btnCadOrcamento.setEnabled(false);
        }
    }

    
    
    public FrmCadastroOrcamento(String codigoServico, boolean flag) {
        
        initComponents();
        iniciarTabela();
        txtCodServico.setText("" + codigoServico);
        s.setCodigoServico(codigoServico);
        flagCriarAlterar = flag;
    }

    boolean flagCriarAlterar;
    Servico s = new Servico();
    boolean flagPeca;
    int limitePeca = 0;
    double valorTotal;
    double valorMaoDeObra;
    double valorPecas;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngPeca = new javax.swing.ButtonGroup();
        panPrincipal = new javax.swing.JPanel();
        txtCodServico = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrcamento = new javax.swing.JTable();
        btnRemoveLinhaPeca = new javax.swing.JButton();
        lblMaoDeObra = new javax.swing.JLabel();
        btnListarOrcamentos = new javax.swing.JButton();
        txtValorTotal = new javax.swing.JTextField();
        lblValorTotal = new javax.swing.JLabel();
        btnExcluirTodasPecas = new javax.swing.JButton();
        pnlPeca = new javax.swing.JPanel();
        lblQtdEmEstoque = new javax.swing.JLabel();
        txtCodPeca = new javax.swing.JTextField();
        lblNomeProduto = new javax.swing.JLabel();
        txtNomePeca = new javax.swing.JTextField();
        lblCategoriaProd = new javax.swing.JLabel();
        lblQtdProduto = new javax.swing.JLabel();
        txtfQuantidadePeca = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtQtdEstoque = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtValorUnitario = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtValorXQtd = new javax.swing.JTextField();
        btnAdicionarPeca = new javax.swing.JButton();
        btnListarPeca = new javax.swing.JButton();
        lblPecaExiste = new javax.swing.JLabel();
        lblCodigoServico = new javax.swing.JLabel();
        btnCadOrcamento = new javax.swing.JButton();
        txtfMaoDeObra = new javax.swing.JFormattedTextField();
        btnFecharFrame = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Orçamento");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/logopng32.png")));
        setMaximumSize(new java.awt.Dimension(1152, 648));
        setMinimumSize(new java.awt.Dimension(1152, 648));
        setResizable(false);
        getContentPane().setLayout(null);

        panPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panPrincipal.setOpaque(false);
        panPrincipal.setLayout(null);

        txtCodServico.setEditable(false);
        txtCodServico.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        txtCodServico.setFocusable(false);
        txtCodServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodServicoActionPerformed(evt);
            }
        });
        panPrincipal.add(txtCodServico);
        txtCodServico.setBounds(210, 10, 170, 30);

        tblOrcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOrcamento);

        panPrincipal.add(jScrollPane1);
        jScrollPane1.setBounds(580, 50, 500, 430);

        btnRemoveLinhaPeca.setText("Remover produto selecionado");
        btnRemoveLinhaPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveLinhaPecaActionPerformed(evt);
            }
        });
        panPrincipal.add(btnRemoveLinhaPeca);
        btnRemoveLinhaPeca.setBounds(690, 10, 190, 30);

        lblMaoDeObra.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblMaoDeObra.setText("Mão de obra total:");
        panPrincipal.add(lblMaoDeObra);
        lblMaoDeObra.setBounds(30, 60, 170, 25);

        btnListarOrcamentos.setText("Listar Orçamentos");
        btnListarOrcamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarOrcamentosActionPerformed(evt);
            }
        });
        panPrincipal.add(btnListarOrcamentos);
        btnListarOrcamentos.setBounds(390, 10, 120, 30);

        txtValorTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtValorTotal.setText("0,00");
        txtValorTotal.setFocusable(false);
        txtValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorTotalActionPerformed(evt);
            }
        });
        panPrincipal.add(txtValorTotal);
        txtValorTotal.setBounds(210, 440, 160, 40);

        lblValorTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblValorTotal.setText("Valor Total:");
        panPrincipal.add(lblValorTotal);
        lblValorTotal.setBounds(40, 450, 160, 25);

        btnExcluirTodasPecas.setText("Remover todos os produtos");
        btnExcluirTodasPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirTodasPecasActionPerformed(evt);
            }
        });
        panPrincipal.add(btnExcluirTodasPecas);
        btnExcluirTodasPecas.setBounds(900, 10, 180, 30);

        pnlPeca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlPeca.setOpaque(false);
        pnlPeca.setLayout(null);

        lblQtdEmEstoque.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQtdEmEstoque.setText("Qtd Estoque:");
        pnlPeca.add(lblQtdEmEstoque);
        lblQtdEmEstoque.setBounds(320, 140, 120, 25);

        txtCodPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodPecaActionPerformed(evt);
            }
        });
        txtCodPeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodPecaKeyReleased(evt);
            }
        });
        pnlPeca.add(txtCodPeca);
        txtCodPeca.setBounds(190, 10, 120, 30);

        lblNomeProduto.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblNomeProduto.setText("Nome:");
        pnlPeca.add(lblNomeProduto);
        lblNomeProduto.setBounds(10, 90, 90, 25);

        txtNomePeca.setEditable(false);
        txtNomePeca.setFocusable(false);
        txtNomePeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePecaActionPerformed(evt);
            }
        });
        pnlPeca.add(txtNomePeca);
        txtNomePeca.setBounds(130, 90, 390, 30);

        lblCategoriaProd.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCategoriaProd.setText("Categoria:");
        pnlPeca.add(lblCategoriaProd);
        lblCategoriaProd.setBounds(10, 180, 110, 30);

        lblQtdProduto.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQtdProduto.setText("Quantidade:");
        pnlPeca.add(lblQtdProduto);
        lblQtdProduto.setBounds(320, 10, 110, 25);

        txtfQuantidadePeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfQuantidadePecaActionPerformed(evt);
            }
        });
        txtfQuantidadePeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfQuantidadePecaKeyReleased(evt);
            }
        });
        pnlPeca.add(txtfQuantidadePeca);
        txtfQuantidadePeca.setBounds(430, 10, 90, 30);

        txtCategoria.setEditable(false);
        txtCategoria.setFocusable(false);
        txtCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoriaActionPerformed(evt);
            }
        });
        pnlPeca.add(txtCategoria);
        txtCategoria.setBounds(130, 180, 170, 30);

        jLabel12.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel12.setText("Código do Produto: ");
        pnlPeca.add(jLabel12);
        jLabel12.setBounds(10, 10, 168, 25);

        txtQtdEstoque.setEditable(false);
        txtQtdEstoque.setFocusable(false);
        txtQtdEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdEstoqueActionPerformed(evt);
            }
        });
        pnlPeca.add(txtQtdEstoque);
        txtQtdEstoque.setBounds(440, 130, 80, 40);

        jLabel13.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel13.setText("Valor Unitário:");
        pnlPeca.add(jLabel13);
        jLabel13.setBounds(10, 140, 140, 25);

        txtValorUnitario.setEditable(false);
        txtValorUnitario.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtValorUnitario.setFocusable(false);
        txtValorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorUnitarioActionPerformed(evt);
            }
        });
        pnlPeca.add(txtValorUnitario);
        txtValorUnitario.setBounds(130, 130, 190, 40);

        jLabel14.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel14.setText("Valor un. x qtd");
        pnlPeca.add(jLabel14);
        jLabel14.setBounds(310, 180, 130, 25);

        txtValorXQtd.setEditable(false);
        txtValorXQtd.setFocusable(false);
        txtValorXQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorXQtdActionPerformed(evt);
            }
        });
        pnlPeca.add(txtValorXQtd);
        txtValorXQtd.setBounds(440, 180, 80, 30);

        btnAdicionarPeca.setText("Adicionar produto ao orçamento");
        btnAdicionarPeca.setEnabled(false);
        btnAdicionarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarPecaActionPerformed(evt);
            }
        });
        pnlPeca.add(btnAdicionarPeca);
        btnAdicionarPeca.setBounds(140, 240, 260, 40);

        btnListarPeca.setText("Listar Peças");
        btnListarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPecaActionPerformed(evt);
            }
        });
        pnlPeca.add(btnListarPeca);
        btnListarPeca.setBounds(190, 50, 120, 30);

        lblPecaExiste.setText("Peça não encontrada.");
        pnlPeca.add(lblPecaExiste);
        lblPecaExiste.setBounds(10, 60, 190, 14);

        panPrincipal.add(pnlPeca);
        pnlPeca.setBounds(20, 100, 540, 320);
        pnlPeca.getAccessibleContext().setAccessibleName("Venda de peça");

        lblCodigoServico.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCodigoServico.setText("Código do serviço:");
        panPrincipal.add(lblCodigoServico);
        lblCodigoServico.setBounds(30, 10, 170, 25);

        btnCadOrcamento.setText("Vincular Orçamento");
        btnCadOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadOrcamentoActionPerformed(evt);
            }
        });
        panPrincipal.add(btnCadOrcamento);
        btnCadOrcamento.setBounds(410, 440, 150, 40);

        txtfMaoDeObra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtfMaoDeObra.setText("0,00");
        txtfMaoDeObra.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtfMaoDeObra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfMaoDeObraFocusLost(evt);
            }
        });
        txtfMaoDeObra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfMaoDeObraKeyReleased(evt);
            }
        });
        panPrincipal.add(txtfMaoDeObra);
        txtfMaoDeObra.setBounds(210, 50, 170, 40);

        getContentPane().add(panPrincipal);
        panPrincipal.setBounds(30, 30, 1100, 510);

        btnFecharFrame.setText("Fechar ");
        btnFecharFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharFrameActionPerformed(evt);
            }
        });
        getContentPane().add(btnFecharFrame);
        btnFecharFrame.setBounds(1050, 550, 80, 30);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fundo.png"))); // NOI18N
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, -20, 1150, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodServicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodServicoActionPerformed

    private void txtCodPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodPecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodPecaActionPerformed

    private void txtNomePecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePecaActionPerformed

    private void txtValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorTotalActionPerformed

    private void btnCadOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadOrcamentoActionPerformed
        if (valorTotal>0){
            Orcamento o = new Orcamento();
            s.setCodigoServico(txtCodServico.getText());
            o.setServico(s);
            o.setMaoDeObra(Double.parseDouble(txtfMaoDeObra.getText()));
            ArrayList<VendaPeca> lista = new ArrayList<>();
            for(int i = 0; i < tblOrcamento.getRowCount(); i++){
                Produto p = new Produto();
                p.setCodigoPeca((String)tblOrcamento.getValueAt(i, 0));
                p.setNomePeca((String) tblOrcamento.getValueAt(i, 1));
                p.setCategoriaPeca((String) tblOrcamento.getValueAt(i, 2));
                p.setValorUnitario((String) tblOrcamento.getValueAt(i, 3));
                p.setQuantidadePeca(((String) tblOrcamento.getValueAt(i, 4)));
                VendaPeca vp = new VendaPeca();
                vp.setPeca(p);
                vp.setQuantidadeVendida(p.getQuantidadePeca());
                lista.add(vp);
            }
            o.setPecas(lista);
            o.setValorTotal(0.0);
            for (int i = 0; i < lista.size(); i++){
                o.setValorTotal(o.getValorTotal() + (lista.get(i).getPeca().getValorUnitarioBanco() * lista.get(i).getQuantidadeVendida()));
            }
            o.setValorTotal(o.getValorTotal() + o.getMaoDeObra());
            try {
                if (tblOrcamento.getRowCount() !=0) {
                    DaoOrcamento.criarOrcamento(o, true, flagCriarAlterar); 
                } else {
                    DaoOrcamento.criarOrcamento(o, false, flagCriarAlterar); 
                }
               
               
            } catch (SQLException ex) {
                Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "Insira um valor de mão de obra e/ou peça.");
        }
    }//GEN-LAST:event_btnCadOrcamentoActionPerformed

    private void txtfQuantidadePecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfQuantidadePecaActionPerformed

    }//GEN-LAST:event_txtfQuantidadePecaActionPerformed

    private void txtCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoriaActionPerformed

    private void txtQtdEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdEstoqueActionPerformed

    private void txtValorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorUnitarioActionPerformed

    private void txtValorXQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorXQtdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorXQtdActionPerformed

    private void btnListarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPecaActionPerformed
        control.Janelas.abrirListagemProduto();
    }//GEN-LAST:event_btnListarPecaActionPerformed

    private void txtCodPecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodPecaKeyReleased
        
        txtCodPeca.setText(TextSize.maxLenghtCodigoPeca(txtCodPeca.getText()));
        if (txtCodPeca.getText().equals("")) {
            limparPeca();
            lblPecaExiste.setText("Digite um código de peça.");
            btnAdicionarPeca.setEnabled(false);
        } else {
            try {
                flagPeca = DaoProduto.existePeca((txtCodPeca.getText()));
                if (flagPeca) {
                    lblPecaExiste.setText("Peça encontrada.");
                    popularPeca((txtCodPeca.getText()));
                    btnAdicionarPeca.setEnabled(true);

                } else {
                    lblPecaExiste.setText("Peça não encontrada.");
                    limparPeca();
                    btnAdicionarPeca.setEnabled(false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
                limparPeca();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
                limparPeca();
            } catch (NumberFormatException nfe) {
                lblPecaExiste.setText("Peça não encontrada.");
                limparPeca();
                btnAdicionarPeca.setEnabled(false);
            }
        }
    }//GEN-LAST:event_txtCodPecaKeyReleased

    private void txtfQuantidadePecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfQuantidadePecaKeyReleased
        txtfQuantidadePeca.setText(TextSize.maxLenghtQuantidadePeca(txtfQuantidadePeca.getText()));
        int qtd;
        float produto;
        float vlunit;
        try {
            qtd = Integer.parseInt(txtfQuantidadePeca.getText());
            if (qtd > limitePeca) {
                txtfQuantidadePeca.setText("" + limitePeca);
                qtd = limitePeca;
                vlunit = Float.parseFloat(txtValorUnitario.getText());
                produto = qtd * vlunit;
                txtValorXQtd.setText("" + produto);
            } else {
                vlunit = Float.parseFloat(txtValorUnitario.getText());
                produto = qtd * vlunit;
                txtValorXQtd.setText("" + produto);
            }
        } catch (NumberFormatException ex) {
            txtfQuantidadePeca.setText("");
        }
    }//GEN-LAST:event_txtfQuantidadePecaKeyReleased

    private void btnAdicionarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarPecaActionPerformed
        boolean flag = true;
        int flagQtd = Integer.parseInt(txtfQuantidadePeca.getText());
        if (flagQtd <= 0 || txtQtdEstoque.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite uma quantidade válida.");
        } else {
            DefaultTableModel model = (DefaultTableModel) tblOrcamento.getModel();
            Object rowData[] = new Object[6];
            rowData[0] = (String) txtCodPeca.getText();
            rowData[1] = (String) txtNomePeca.getText();
            rowData[2] = (String) txtCategoria.getText();
            rowData[3] = (String) txtValorUnitario.getText();
            rowData[4] = (String) txtfQuantidadePeca.getText();
            rowData[5] = (String) txtValorXQtd.getText();

            String aux = (String) rowData[0];
            String aux2 = "";
            for (int i = 0; i < model.getRowCount(); i++) {
                aux2 = (String) model.getValueAt(i, 0);
                if (aux.equals(aux2)) {
                    flag = false;
                }
            }
            if (flag) {
                model.addRow(rowData);
                tblOrcamento.setModel(model);
                txtCodPeca.setText("");
                limparPeca();
                txtCodPeca.requestFocus();
            }
        }
        
       
        
       atualizarValorTotal();
    }//GEN-LAST:event_btnAdicionarPecaActionPerformed

    private void btnExcluirTodasPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirTodasPecasActionPerformed
        iniciarTabela();
        atualizarValorTotal();
    }//GEN-LAST:event_btnExcluirTodasPecasActionPerformed

    private void btnRemoveLinhaPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveLinhaPecaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblOrcamento.getModel();
        if (model.getRowCount() != 0) {
            model.removeRow(tblOrcamento.getSelectedRow());
            tblOrcamento.setModel(model);
        }
        atualizarValorTotal();
    }//GEN-LAST:event_btnRemoveLinhaPecaActionPerformed

    private void btnFecharFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharFrameActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharFrameActionPerformed

    private void btnListarOrcamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarOrcamentosActionPerformed
        try {
            control.Janelas.abrirListagemOrçamento();
        } catch (SQLException ex) {
            Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnListarOrcamentosActionPerformed

    private void txtfMaoDeObraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfMaoDeObraFocusLost
        try {
            valorMaoDeObra = Double.parseDouble(txtfMaoDeObra.getText().replace(",", "."));
        } catch (NumberFormatException nfe) {
            txtfMaoDeObra.setText("0,00");
            valorMaoDeObra = 0;
        }
        atualizarValorTotal();
    }//GEN-LAST:event_txtfMaoDeObraFocusLost

    private void txtfMaoDeObraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMaoDeObraKeyReleased
        txtfMaoDeObra.setText(TextSize.maxLenghtMaoDeObra(txtfMaoDeObra.getText()));
    }//GEN-LAST:event_txtfMaoDeObraKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroOrcamento(control.SynchroSoft.getNvlAdm()).setVisible(true);
            }
        });
    }

    public void popularPeca(String codigo) throws SQLException, ClassNotFoundException {
        Produto p = new Produto();
        p = DaoProduto.popularPeca(codigo);
        limitePeca = p.getQuantidadePeca();
        txtNomePeca.setText("" + p.getNomePeca());
        txtValorUnitario.setText("" + p.getValorUnitarioSTR());
        txtQtdEstoque.setText("" + p.getQuantidadePeca());
        txtCategoria.setText("" + p.getCategoriaPeca());
    }

    public void limparPeca() {
        txtfQuantidadePeca.setText("0");
        txtNomePeca.setText("");
        txtValorUnitario.setText("0.00");
        txtQtdEstoque.setText("0");
        txtCategoria.setText("");
        txtValorXQtd.setText("");
        limitePeca = 0;

    }

    public void iniciarTabela() {
        String[] nomeColunas = {"Código", "Nome", "Categoria", "Vlr Unit.", "Qtd", "Vlr SubTotal"};
        try {
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {

                    return false;
                }
            };
            tblOrcamento.setModel(model);
            model.setColumnIdentifiers(nomeColunas);
            model.setRowCount(0);
            tblOrcamento.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblOrcamento.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblOrcamento.getColumnModel().getColumn(5).setPreferredWidth(90);
            
        } catch (Exception ex) {
            System.out.println("Erro ao reiniciar tabela.\n\n" + ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarPeca;
    private javax.swing.JButton btnCadOrcamento;
    private javax.swing.JButton btnExcluirTodasPecas;
    private javax.swing.JButton btnFecharFrame;
    private javax.swing.JButton btnListarOrcamentos;
    private javax.swing.JButton btnListarPeca;
    private javax.swing.JButton btnRemoveLinhaPeca;
    private javax.swing.ButtonGroup btngPeca;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblCategoriaProd;
    private javax.swing.JLabel lblCodigoServico;
    private javax.swing.JLabel lblMaoDeObra;
    private javax.swing.JLabel lblNomeProduto;
    private javax.swing.JLabel lblPecaExiste;
    private javax.swing.JLabel lblQtdEmEstoque;
    private javax.swing.JLabel lblQtdProduto;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JPanel panPrincipal;
    private javax.swing.JPanel pnlPeca;
    private javax.swing.JTable tblOrcamento;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtCodPeca;
    private javax.swing.JTextField txtCodServico;
    private javax.swing.JTextField txtNomePeca;
    private javax.swing.JTextField txtQtdEstoque;
    private javax.swing.JTextField txtValorTotal;
    private javax.swing.JTextField txtValorUnitario;
    private javax.swing.JTextField txtValorXQtd;
    private javax.swing.JFormattedTextField txtfMaoDeObra;
    private javax.swing.JTextField txtfQuantidadePeca;
    // End of variables declaration//GEN-END:variables

    private void atualizarValorTotal() {
        
        valorPecas = 0;
        for (int i = 0; i < tblOrcamento.getRowCount(); i++){
            valorPecas += Double.parseDouble((String) tblOrcamento.getValueAt(i, 5));
        }
        
        valorTotal = valorPecas + valorMaoDeObra;
        String valorTotalSTR =(new DecimalFormat("###,###,##0.00").format(valorTotal));
        txtValorTotal.setText(valorTotalSTR);
        
        
    }
    
    private void selecionarAoFocar(){
        txtfMaoDeObra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtfMaoDeObra.selectAll();
                    }
                });
            }
        });
    }
}
