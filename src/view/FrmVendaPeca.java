/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.Texto;
import dao.DaoProduto;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Produto;
import model.Servico;
import model.VendaPeca;

/**
 *
 * @author Luiz
 */
public class FrmVendaPeca extends javax.swing.JFrame {

    /**
     * Creates new form FrmCadastroOrcamento
     */
    public FrmVendaPeca(int nvlAdm) {
        initComponents();
        iniciarTabela();
        if (nvlAdm == 0) {
            btnVender.setEnabled(false);
        }
        selecionarAoFocar();
    }

    
    
    public FrmVendaPeca(String codigoServico, boolean flag) {
        
        initComponents();
        iniciarTabela();
        s.setCodigoServico(codigoServico);
        flagCriarAlterar = flag;
    }

    boolean flagCriarAlterar;
    Servico s = new Servico();
    boolean flagPeca;
    long limitePeca = 0;
    double valorTotal;
    double valorMaoDeObra;
    double valorPecas;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngPeca = new javax.swing.ButtonGroup();
        panPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPecas = new javax.swing.JTable();
        btnRemoveLinhaPeca = new javax.swing.JButton();
        btnExcluirTodasPecas = new javax.swing.JButton();
        pnlPeca = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtNomePeca = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnListarPeca = new javax.swing.JButton();
        lblPecaExiste = new javax.swing.JLabel();
        txtfQuantidadePeca = new javax.swing.JFormattedTextField();
        lblCategoriaProd = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        lblQtdEmEstoque = new javax.swing.JLabel();
        txtQtdEstoque = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtfValorUnitario = new javax.swing.JFormattedTextField();
        txtfValorXQtd = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        btnAdicionarPeca = new javax.swing.JButton();
        txtCodPeca = new javax.swing.JTextField();
        btnVender = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblValorTotal = new javax.swing.JLabel();
        txtfValorTotal = new javax.swing.JFormattedTextField();
        btnMenuPrincipal = new javax.swing.JButton();
        btnFecharFrame = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Venda de Produtos");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/logopng32.png")));
        setMaximumSize(new java.awt.Dimension(1152, 648));
        setMinimumSize(new java.awt.Dimension(1152, 648));
        setResizable(false);
        getContentPane().setLayout(null);

        panPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panPrincipal.setOpaque(false);
        panPrincipal.setLayout(null);

        tblPecas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPecas);

        panPrincipal.add(jScrollPane1);
        jScrollPane1.setBounds(580, 50, 500, 430);

        btnRemoveLinhaPeca.setText("Remover produto selecionado");
        btnRemoveLinhaPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveLinhaPecaActionPerformed(evt);
            }
        });
        panPrincipal.add(btnRemoveLinhaPeca);
        btnRemoveLinhaPeca.setBounds(690, 10, 190, 30);

        btnExcluirTodasPecas.setText("Remover todos os produtos\n");
        btnExcluirTodasPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirTodasPecasActionPerformed(evt);
            }
        });
        panPrincipal.add(btnExcluirTodasPecas);
        btnExcluirTodasPecas.setBounds(900, 10, 180, 30);

        pnlPeca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlPeca.setOpaque(false);
        pnlPeca.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel6.setText("Nome:");
        pnlPeca.add(jLabel6);
        jLabel6.setBounds(10, 90, 55, 25);

        txtNomePeca.setEditable(false);
        txtNomePeca.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        txtNomePeca.setFocusable(false);
        txtNomePeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePecaActionPerformed(evt);
            }
        });
        pnlPeca.add(txtNomePeca);
        txtNomePeca.setBounds(150, 90, 370, 30);

        jLabel10.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel10.setText("Quantidade:");
        pnlPeca.add(jLabel10);
        jLabel10.setBounds(320, 10, 98, 25);

        jLabel12.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel12.setText("Código do Produto:");
        pnlPeca.add(jLabel12);
        jLabel12.setBounds(10, 10, 162, 25);

        btnListarPeca.setText("Listar Produtos");
        btnListarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPecaActionPerformed(evt);
            }
        });
        pnlPeca.add(btnListarPeca);
        btnListarPeca.setBounds(190, 50, 120, 30);

        lblPecaExiste.setText("Peça não encontrada.");
        pnlPeca.add(lblPecaExiste);
        lblPecaExiste.setBounds(10, 50, 190, 25);

        txtfQuantidadePeca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtfQuantidadePeca.setText("0");
        txtfQuantidadePeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfQuantidadePecaKeyReleased(evt);
            }
        });
        pnlPeca.add(txtfQuantidadePeca);
        txtfQuantidadePeca.setBounds(430, 10, 90, 30);

        lblCategoriaProd.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCategoriaProd.setText("Categoria:");
        pnlPeca.add(lblCategoriaProd);
        lblCategoriaProd.setBounds(10, 130, 110, 30);

        txtCategoria.setEditable(false);
        txtCategoria.setFocusable(false);
        txtCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoriaActionPerformed(evt);
            }
        });
        pnlPeca.add(txtCategoria);
        txtCategoria.setBounds(150, 130, 180, 30);

        lblQtdEmEstoque.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQtdEmEstoque.setText("Qtd Estoque:");
        pnlPeca.add(lblQtdEmEstoque);
        lblQtdEmEstoque.setBounds(330, 130, 110, 25);

        txtQtdEstoque.setEditable(false);
        txtQtdEstoque.setFocusable(false);
        txtQtdEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdEstoqueActionPerformed(evt);
            }
        });
        pnlPeca.add(txtQtdEstoque);
        txtQtdEstoque.setBounds(440, 130, 80, 30);

        jLabel13.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel13.setText("Valor Unitário: R$");
        pnlPeca.add(jLabel13);
        jLabel13.setBounds(10, 180, 150, 25);

        txtfValorUnitario.setEditable(false);
        txtfValorUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfValorUnitario.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pnlPeca.add(txtfValorUnitario);
        txtfValorUnitario.setBounds(150, 170, 370, 40);

        txtfValorXQtd.setEditable(false);
        txtfValorXQtd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfValorXQtd.setFocusable(false);
        txtfValorXQtd.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pnlPeca.add(txtfValorXQtd);
        txtfValorXQtd.setBounds(150, 220, 370, 40);

        jLabel14.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel14.setText("Valor un.*qtd: R$");
        pnlPeca.add(jLabel14);
        jLabel14.setBounds(10, 230, 140, 25);

        btnAdicionarPeca.setText("Adicionar produto na lista de venda");
        btnAdicionarPeca.setEnabled(false);
        btnAdicionarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarPecaActionPerformed(evt);
            }
        });
        pnlPeca.add(btnAdicionarPeca);
        btnAdicionarPeca.setBounds(130, 270, 280, 40);

        txtCodPeca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodPecaFocusGained(evt);
            }
        });
        txtCodPeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodPecaKeyReleased(evt);
            }
        });
        pnlPeca.add(txtCodPeca);
        txtCodPeca.setBounds(190, 10, 120, 30);

        panPrincipal.add(pnlPeca);
        pnlPeca.setBounds(20, 100, 540, 320);
        pnlPeca.getAccessibleContext().setAccessibleName("Venda de peça");

        btnVender.setText("Vender");
        btnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderActionPerformed(evt);
            }
        });
        panPrincipal.add(btnVender);
        btnVender.setBounds(430, 440, 130, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 38)); // NOI18N
        jLabel1.setText("Venda de Peças e Produtos");
        panPrincipal.add(jLabel1);
        jLabel1.setBounds(20, 10, 540, 80);

        lblValorTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblValorTotal.setText("Valor Total: R$");
        panPrincipal.add(lblValorTotal);
        lblValorTotal.setBounds(20, 450, 190, 25);

        txtfValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfValorTotal.setText("0,00");
        txtfValorTotal.setFocusable(false);
        txtfValorTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        panPrincipal.add(txtfValorTotal);
        txtfValorTotal.setBounds(200, 440, 220, 40);

        getContentPane().add(panPrincipal);
        panPrincipal.setBounds(10, 10, 1125, 510);

        btnMenuPrincipal.setText("Menu Principal");
        btnMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuPrincipalActionPerformed(evt);
            }
        });
        getContentPane().add(btnMenuPrincipal);
        btnMenuPrincipal.setBounds(900, 550, 130, 30);

        btnFecharFrame.setText("Fechar ");
        btnFecharFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharFrameActionPerformed(evt);
            }
        });
        getContentPane().add(btnFecharFrame);
        btnFecharFrame.setBounds(1055, 550, 80, 30);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fundo.png"))); // NOI18N
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, -20, 1150, 670);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenderActionPerformed
        if (valorTotal>0){
            
            ArrayList<VendaPeca> lista = new ArrayList<>();
            for(int i = 0; i < tblPecas.getRowCount(); i++){
                Produto p = new Produto();
                p.setCodigoPeca((String)tblPecas.getValueAt(i, 0));
                p.setNomePeca((String) tblPecas.getValueAt(i, 1));
                p.setCategoriaPeca((String) tblPecas.getValueAt(i, 2));
                p.setValorUnitario((String) tblPecas.getValueAt(i, 3));
                p.setQuantidadePeca(((String) tblPecas.getValueAt(i, 4)));
                VendaPeca vp = new VendaPeca();
                vp.setPeca(p);
                vp.setQuantidadeVendida(p.getQuantidadePeca());
                lista.add(vp);
            }
            
            if (tblPecas.getRowCount() !=0) {
                DaoProduto.atualizarEstoque(lista);
                iniciarTabela();
                txtfValorTotal.setValue(0);
                txtCodPeca.requestFocus();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione ao menos um produto para vender."
                        ,"Erro - lista de venda vazia", 0);
            }
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione ao menos um produto para vender."
                        ,"Erro - lista de venda vazia", 0);
        }
    }//GEN-LAST:event_btnVenderActionPerformed

    private void btnExcluirTodasPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirTodasPecasActionPerformed
        iniciarTabela();
        atualizarValorTotal();
    }//GEN-LAST:event_btnExcluirTodasPecasActionPerformed

    private void btnRemoveLinhaPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveLinhaPecaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPecas.getModel();
        if (model.getRowCount() != 0) {
            model.removeRow(tblPecas.getSelectedRow());
            tblPecas.setModel(model);
        }
        atualizarValorTotal();
    }//GEN-LAST:event_btnRemoveLinhaPecaActionPerformed

    private void btnMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuPrincipalActionPerformed
        control.Janelas.focarPrincipal();
    }//GEN-LAST:event_btnMenuPrincipalActionPerformed

    private void btnFecharFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharFrameActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharFrameActionPerformed

    private void txtfQuantidadePecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfQuantidadePecaKeyReleased
        txtfQuantidadePeca.setText(control.Texto.maxLenghtQuantidadePeca(txtfQuantidadePeca.getText()));
        calcularValorUnitXQtd();
    }//GEN-LAST:event_txtfQuantidadePecaKeyReleased

    private void btnListarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPecaActionPerformed
        control.Janelas.abrirListagemProduto();
    }//GEN-LAST:event_btnListarPecaActionPerformed

    private void txtNomePecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePecaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePecaActionPerformed

    private void txtCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoriaActionPerformed

    private void txtQtdEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdEstoqueActionPerformed

    private void btnAdicionarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarPecaActionPerformed
        adicionarProdutoNaTabela();

    }//GEN-LAST:event_btnAdicionarPecaActionPerformed

    private void txtCodPecaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodPecaFocusGained
        txtCodPeca.selectAll();
    }//GEN-LAST:event_txtCodPecaFocusGained

    private void txtCodPecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodPecaKeyReleased
        procurarProduto();

    }//GEN-LAST:event_txtCodPecaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVendaPeca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVendaPeca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVendaPeca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVendaPeca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVendaPeca(control.SynchroSoft.getNvlAdm()).setVisible(true);
            }
        });
    }

    public void popularPeca(String codigo) throws SQLException, ClassNotFoundException {
        Produto p = new Produto();
        p = DaoProduto.popularPeca(codigo);
        limitePeca = p.getQuantidadePeca();
        txtNomePeca.setText("" + p.getNomePeca());
        txtfValorUnitario.setText("" + p.getValorUnitarioSTR());
        txtQtdEstoque.setText("" + p.getQuantidadePeca());
        txtCategoria.setText("" + p.getCategoriaPeca());
    }

    public void limparPeca() {
        txtfQuantidadePeca.setText("0");
        txtNomePeca.setText("");
        txtfValorUnitario.setText("0,00");
        txtQtdEstoque.setText("0");
        txtCategoria.setText("");
        txtfValorXQtd.setText("");
        limitePeca = 0;

    }

    public void iniciarTabela() {
        String[] nomeColunas = {"Código", "Nome", "Categoria", "Valor Unitário", "Quantidade", "Valor Sub Total"};
        try {
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {

                    return false;
                }
            };
            tblPecas.setModel(model);
            model.setColumnIdentifiers(nomeColunas);
            model.setRowCount(0);
        } catch (Exception ex) {
            System.out.println("Erro ao reiniciar tabela.\n\n" + ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarPeca;
    private javax.swing.JButton btnExcluirTodasPecas;
    private javax.swing.JButton btnFecharFrame;
    private javax.swing.JButton btnListarPeca;
    private javax.swing.JButton btnMenuPrincipal;
    private javax.swing.JButton btnRemoveLinhaPeca;
    private javax.swing.JButton btnVender;
    private javax.swing.ButtonGroup btngPeca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblCategoriaProd;
    private javax.swing.JLabel lblPecaExiste;
    private javax.swing.JLabel lblQtdEmEstoque;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JPanel panPrincipal;
    private javax.swing.JPanel pnlPeca;
    private javax.swing.JTable tblPecas;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtCodPeca;
    private javax.swing.JTextField txtNomePeca;
    private javax.swing.JTextField txtQtdEstoque;
    private javax.swing.JFormattedTextField txtfQuantidadePeca;
    private javax.swing.JFormattedTextField txtfValorTotal;
    private javax.swing.JFormattedTextField txtfValorUnitario;
    private javax.swing.JFormattedTextField txtfValorXQtd;
    // End of variables declaration//GEN-END:variables

    private void atualizarValorTotal() {
        
        valorPecas = 0;
        for (int i = 0; i < tblPecas.getRowCount(); i++){
            valorPecas += control.Texto.converterStrDoubleFormatada(String.valueOf(tblPecas.getValueAt(i, 5)));
        }
        
        valorTotal = valorPecas + valorMaoDeObra;
        txtfValorTotal.setValue(valorTotal);
        
        
    }

    private void calcularValorUnitXQtd() {
        txtfQuantidadePeca.setText(Texto.maxLenghtQuantidadePeca(txtfQuantidadePeca.getText()));
        long qtd;
        float produto;
        float vlunit;
        try {
            qtd = Long.parseLong(txtfQuantidadePeca.getText());
            if (qtd > limitePeca) {
                txtfQuantidadePeca.setValue(limitePeca);
                qtd = limitePeca;
                String vlunitSTR = txtfValorUnitario.getText();
                vlunitSTR = vlunitSTR.replace(".", "");
                vlunitSTR = vlunitSTR.replace(",", ".");
                vlunit = Float.parseFloat(vlunitSTR);
                produto = qtd * vlunit;
                txtfValorXQtd.setValue(produto);
            } else {
                String vlunitSTR = txtfValorUnitario.getText();
                vlunitSTR = vlunitSTR.replace(".", "");
                vlunitSTR = vlunitSTR.replace(",", ".");
                vlunit = Float.parseFloat(vlunitSTR);
                produto = qtd * vlunit;
                txtfValorXQtd.setValue(produto);
            }
        } catch (NumberFormatException ex) {
            txtfQuantidadePeca.setValue(0);
        }
    }

    private void adicionarProdutoNaTabela() {
        boolean flag = true;
        Long flagQtd = Long.parseLong(txtfQuantidadePeca.getText());
        if (flagQtd <= 0 || txtQtdEstoque.equals("")) {
            JOptionPane.showMessageDialog(this, "Quantidade do produto inválida.\n"
                    +"Verifique se há produtos disponíveis no estoque.", "Erro - Quantidade inválida ou estoque zerado", 0);
        } else {
            DefaultTableModel model = (DefaultTableModel) tblPecas.getModel();
            Object rowData[] = new Object[6];
            rowData[0] = (String) txtCodPeca.getText();
            rowData[1] = (String) txtNomePeca.getText();
            rowData[2] = (String) txtCategoria.getText();
            rowData[3] = (String) txtfValorUnitario.getText();
            rowData[4] = (String) txtfQuantidadePeca.getText();
            rowData[5] = (String) txtfValorXQtd.getText();

            String aux = (String) rowData[0];
            String aux2 = "";
            for (int i = 0; i < model.getRowCount(); i++) {
                aux2 = (String) model.getValueAt(i, 0);
                if (aux.equals(aux2)) {
                    flag = false;
                }
            }
            if (flag) {
                model.addRow(rowData);
                tblPecas.setModel(model);
                txtCodPeca.setText("");
                limparPeca();
                txtCodPeca.requestFocus();
            }
        }

        atualizarValorTotal();
    }

    private void procurarProduto() {
        txtCodPeca.setText(Texto.maxLenghtCodigoPeca(txtCodPeca.getText()));
        if (txtCodPeca.getText().equals("")) {
            limparPeca();
            lblPecaExiste.setText("Digite um código de peça.");
            btnAdicionarPeca.setEnabled(false);
        } else {
            try {
                flagPeca = DaoProduto.existePeca((txtCodPeca.getText()));
                if (flagPeca) {
                    lblPecaExiste.setText("Peça encontrada.");
                    popularPeca((txtCodPeca.getText()));
                    btnAdicionarPeca.setEnabled(true);
                    txtfQuantidadePeca.setValue(1);
                    calcularValorUnitXQtd();

                } else {
                    lblPecaExiste.setText("Peça não encontrada.");
                    limparPeca();
                    btnAdicionarPeca.setEnabled(false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
                limparPeca();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmCadastroOrcamento.class.getName()).log(Level.SEVERE, null, ex);
                limparPeca();
            } catch (NumberFormatException nfe) {
                lblPecaExiste.setText("Peça não encontrada.");
                limparPeca();
                btnAdicionarPeca.setEnabled(false);
            }
        }
    }

    private void selecionarAoFocar() {
        txtfQuantidadePeca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtfQuantidadePeca.selectAll();
                    }
                });
            }
        });
    }
}
