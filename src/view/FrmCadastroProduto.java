/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.TextSize;
import dao.DaoProduto;
import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Produto;

/**
 *
 * @author Luiz
 */
public class FrmCadastroProduto extends javax.swing.JFrame {

    private boolean existeProduto = false;

    /**
     * Creates new form FrmCadastroPeca
     */
    public FrmCadastroProduto(int nvlAdm) {
        initComponents();
        inicializarTabela();
        if (nvlAdm == 0) {
            btnCadastrar.setEnabled(false);
        }
        selecionarAoFocar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMenuPrincipal = new javax.swing.JButton();
        btnFecharFrame = new javax.swing.JButton();
        panPrincipal = new javax.swing.JPanel();
        lblCodigoPeca = new javax.swing.JLabel();
        lblCategoriaPeca = new javax.swing.JLabel();
        txtNomePeca = new javax.swing.JTextField();
        lblNomePeca = new javax.swing.JLabel();
        lblQuantidadePeca = new javax.swing.JLabel();
        lblValorUnitario = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox<>();
        btnLimpar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        btnListarPeca = new javax.swing.JButton();
        txtQuantidadePeca = new javax.swing.JFormattedTextField();
        txtfValorUnitario = new javax.swing.JFormattedTextField();
        lblQuantidadeMinima = new javax.swing.JLabel();
        txtQuantidadeMinima = new javax.swing.JFormattedTextField();
        lblQuantidadeMaxima = new javax.swing.JLabel();
        txtQuantidadeMaxima = new javax.swing.JFormattedTextField();
        txtCodigoPeca = new javax.swing.JTextField();
        lblCodigoExiste = new javax.swing.JLabel();
        lblProdutoRecente = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutoRecente = new javax.swing.JTable();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produto");
        setAlwaysOnTop(true);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/logopng32.png")));
        setMinimumSize(new java.awt.Dimension(1152, 648));
        setResizable(false);
        getContentPane().setLayout(null);

        btnMenuPrincipal.setText("Menu Principal");
        btnMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuPrincipalActionPerformed(evt);
            }
        });
        getContentPane().add(btnMenuPrincipal);
        btnMenuPrincipal.setBounds(900, 550, 130, 30);

        btnFecharFrame.setText("Fechar ");
        btnFecharFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharFrameActionPerformed(evt);
            }
        });
        getContentPane().add(btnFecharFrame);
        btnFecharFrame.setBounds(1055, 550, 80, 30);

        panPrincipal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panPrincipal.setOpaque(false);
        panPrincipal.setPreferredSize(new java.awt.Dimension(1100, 510));
        panPrincipal.setLayout(null);

        lblCodigoPeca.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCodigoPeca.setText("Código de Barras:");
        panPrincipal.add(lblCodigoPeca);
        lblCodigoPeca.setBounds(10, 10, 154, 25);

        lblCategoriaPeca.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCategoriaPeca.setText("Categoria:");
        panPrincipal.add(lblCategoriaPeca);
        lblCategoriaPeca.setBounds(656, 10, 90, 25);

        txtNomePeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomePecaKeyReleased(evt);
            }
        });
        panPrincipal.add(txtNomePeca);
        txtNomePeca.setBounds(170, 50, 316, 25);

        lblNomePeca.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblNomePeca.setText("Nome da Peça:");
        panPrincipal.add(lblNomePeca);
        lblNomePeca.setBounds(10, 50, 140, 25);

        lblQuantidadePeca.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQuantidadePeca.setText("Quantidade:");
        panPrincipal.add(lblQuantidadePeca);
        lblQuantidadePeca.setBounds(10, 90, 140, 25);

        lblValorUnitario.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblValorUnitario.setText("Valor Unitário:");
        panPrincipal.add(lblValorUnitario);
        lblValorUnitario.setBounds(656, 50, 114, 25);

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerador", "Bombas", "Aquecedores", "Alarme de incêndio", "Pressurizadores de escada", "Alarme perimetral", "Cabine primária", "Redutoras de pressão" }));
        panPrincipal.add(cmbCategoria);
        cmbCategoria.setBounds(788, 10, 175, 25);

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        panPrincipal.add(btnLimpar);
        btnLimpar.setBounds(700, 130, 100, 30);

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setNextFocusableComponent(txtCodigoPeca);
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        panPrincipal.add(btnCadastrar);
        btnCadastrar.setBounds(830, 130, 130, 30);

        btnListarPeca.setText("Listar produtos cadastrados");
        btnListarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPecaActionPerformed(evt);
            }
        });
        panPrincipal.add(btnListarPeca);
        btnListarPeca.setBounds(170, 130, 180, 30);

        txtQuantidadePeca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        txtQuantidadePeca.setText("0");
        txtQuantidadePeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantidadePecaKeyReleased(evt);
            }
        });
        panPrincipal.add(txtQuantidadePeca);
        txtQuantidadePeca.setBounds(170, 90, 100, 25);

        txtfValorUnitario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####0.00"))));
        txtfValorUnitario.setText("0,00");
        txtfValorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfValorUnitarioActionPerformed(evt);
            }
        });
        txtfValorUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfValorUnitarioKeyReleased(evt);
            }
        });
        panPrincipal.add(txtfValorUnitario);
        txtfValorUnitario.setBounds(788, 50, 175, 25);

        lblQuantidadeMinima.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQuantidadeMinima.setText("Alerta Qtd Mínima:");
        panPrincipal.add(lblQuantidadeMinima);
        lblQuantidadeMinima.setBounds(280, 90, 156, 25);

        txtQuantidadeMinima.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        txtQuantidadeMinima.setText("0");
        txtQuantidadeMinima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeMinimaActionPerformed(evt);
            }
        });
        txtQuantidadeMinima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantidadeMinimaKeyReleased(evt);
            }
        });
        panPrincipal.add(txtQuantidadeMinima);
        txtQuantidadeMinima.setBounds(440, 90, 100, 25);

        lblQuantidadeMaxima.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblQuantidadeMaxima.setText("Alerta Qtd Máxima:");
        panPrincipal.add(lblQuantidadeMaxima);
        lblQuantidadeMaxima.setBounds(550, 90, 157, 25);

        txtQuantidadeMaxima.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        txtQuantidadeMaxima.setText("0");
        txtQuantidadeMaxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeMaximaActionPerformed(evt);
            }
        });
        txtQuantidadeMaxima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantidadeMaximaKeyReleased(evt);
            }
        });
        panPrincipal.add(txtQuantidadeMaxima);
        txtQuantidadeMaxima.setBounds(720, 90, 100, 25);

        txtCodigoPeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoPecaKeyReleased(evt);
            }
        });
        panPrincipal.add(txtCodigoPeca);
        txtCodigoPeca.setBounds(170, 10, 316, 25);

        lblCodigoExiste.setForeground(java.awt.Color.red);
        lblCodigoExiste.setText("Código inválido.");
        panPrincipal.add(lblCodigoExiste);
        lblCodigoExiste.setBounds(490, 10, 151, 25);

        getContentPane().add(panPrincipal);
        panPrincipal.setBounds(10, 10, 1125, 180);

        lblProdutoRecente.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblProdutoRecente.setText("Produtos Cadastrados Recentemente:");
        getContentPane().add(lblProdutoRecente);
        lblProdutoRecente.setBounds(10, 190, 350, 25);

        tblProdutoRecente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProdutoRecente);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 220, 1125, 320);

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fundo.png"))); // NOI18N
        getContentPane().add(lblBackground);
        lblBackground.setBounds(0, -20, 1150, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        cadastrarProduto();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnListarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPecaActionPerformed
        control.Janelas.abrirListagemProduto();
    }//GEN-LAST:event_btnListarPecaActionPerformed

    private void btnFecharFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharFrameActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharFrameActionPerformed

    private void btnMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuPrincipalActionPerformed
        control.Janelas.focarPrincipal();
    }//GEN-LAST:event_btnMenuPrincipalActionPerformed

    private void txtNomePecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomePecaKeyReleased
        txtNomePeca.setText(TextSize.maxLenghtNomePeca(txtNomePeca.getText()));
    }//GEN-LAST:event_txtNomePecaKeyReleased

    private void txtQuantidadePecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadePecaKeyReleased
        txtQuantidadePeca.setText(TextSize.maxLenghtQuantidadePeca(txtQuantidadePeca.getText()));
    }//GEN-LAST:event_txtQuantidadePecaKeyReleased

    private void txtfValorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfValorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfValorUnitarioActionPerformed

    private void txtfValorUnitarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfValorUnitarioKeyReleased
        txtfValorUnitario.setText(TextSize.maxLenghtValorPeca(txtfValorUnitario.getText()));
    }//GEN-LAST:event_txtfValorUnitarioKeyReleased

    private void txtQuantidadeMinimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeMinimaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeMinimaActionPerformed

    private void txtQuantidadeMinimaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeMinimaKeyReleased
        txtQuantidadeMinima.setText(TextSize.maxLenghtQuantidadePeca(txtQuantidadeMinima.getText()));
    }//GEN-LAST:event_txtQuantidadeMinimaKeyReleased

    private void txtQuantidadeMaximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeMaximaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeMaximaActionPerformed

    private void txtQuantidadeMaximaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeMaximaKeyReleased
        txtQuantidadeMaxima.setText(TextSize.maxLenghtQuantidadePeca(txtQuantidadeMaxima.getText()));
    }//GEN-LAST:event_txtQuantidadeMaximaKeyReleased

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtCodigoPecaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoPecaKeyReleased
        txtCodigoPeca.setText(TextSize.maxLenghtCodigoPeca(txtCodigoPeca.getText()));
        verificarCodigoProduto();
    }//GEN-LAST:event_txtCodigoPecaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroProduto(control.SynchroSoft.getNvlAdm()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnFecharFrame;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnListarPeca;
    private javax.swing.JButton btnMenuPrincipal;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblCategoriaPeca;
    private javax.swing.JLabel lblCodigoExiste;
    private javax.swing.JLabel lblCodigoPeca;
    private javax.swing.JLabel lblNomePeca;
    private javax.swing.JLabel lblProdutoRecente;
    private javax.swing.JLabel lblQuantidadeMaxima;
    private javax.swing.JLabel lblQuantidadeMinima;
    private javax.swing.JLabel lblQuantidadePeca;
    private javax.swing.JLabel lblValorUnitario;
    private javax.swing.JPanel panPrincipal;
    private javax.swing.JTable tblProdutoRecente;
    private javax.swing.JTextField txtCodigoPeca;
    private javax.swing.JTextField txtNomePeca;
    private javax.swing.JFormattedTextField txtQuantidadeMaxima;
    private javax.swing.JFormattedTextField txtQuantidadeMinima;
    private javax.swing.JFormattedTextField txtQuantidadePeca;
    private javax.swing.JFormattedTextField txtfValorUnitario;
    // End of variables declaration//GEN-END:variables

    private void limpar() {
        txtCodigoPeca.setText("");
        txtNomePeca.setText("");
        txtfValorUnitario.setText("0,00");
        txtQuantidadePeca.setText("0");
        txtQuantidadeMinima.setText("0");
        txtQuantidadeMaxima.setText("0");
        cmbCategoria.setSelectedIndex(0);
    }

    private void inicializarTabela() {
        String[] nomeColunas = {"Código", "Nome", "Categoria", "Quantidade", "Alerta Qtd Mínima", "Alerta Qtd Máxima", "Valor Unitário"};
        try {
            DefaultTableModel model = new DefaultTableModel();
            tblProdutoRecente.setModel(model);
            model.setColumnIdentifiers(nomeColunas);
            model.setRowCount(0);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao popular tabela de cadastros recentes.\n\n" + ex.getMessage(), "Erro ao popular tabela", 0);
        }
        // tblProdutoRecente.getColumnModel().getColumn(0).setMaxWidth(0);
    }

    private void atualizarTabela(Produto peca) {
        Object rowData[] = new Object[7];

        rowData[0] = peca.getCodigoPeca();
        rowData[1] = peca.getNomePeca();
        rowData[2] = peca.getCategoriaPeca();
        rowData[3] = peca.getQuantidadePeca();
        rowData[4] = peca.getAlertaQtdMin();
        rowData[5] = peca.getAlertaQtdMax();
        rowData[6] = peca.getValorUnitarioSTR();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblProdutoRecente.getModel();
        model.addRow(rowData);
    }

    private void selecionarAoFocar() {
        txtfValorUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtfValorUnitario.selectAll();
                    }
                });
            }
        });

        txtQuantidadePeca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtQuantidadePeca.selectAll();
                    }
                });
            }
        });

        txtQuantidadeMinima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtQuantidadeMinima.selectAll();
                    }
                });
            }
        });

        txtQuantidadeMaxima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        txtQuantidadeMaxima.selectAll();
                    }
                });
            }
        });
    }

    private void verificarCodigoProduto() {
        if (txtCodigoPeca.getText().equals("")) {
            lblCodigoExiste.setText("Código Inválido.");
            lblCodigoExiste.setForeground(Color.red);
        } else {
            this.existeProduto = dao.DaoProduto.existePeca(txtCodigoPeca.getText());
            if (this.existeProduto) {
                lblCodigoExiste.setText("Produto já cadastrado.");
                lblCodigoExiste.setForeground(Color.red);
            } else {
                lblCodigoExiste.setText("Código Disponível.");
                lblCodigoExiste.setForeground(Color.black);
            }
        }
    }

    private void cadastrarProduto() {
        if (validarCampos()) {
            Produto prod = new Produto(txtCodigoPeca.getText(), txtNomePeca.getText(),
                cmbCategoria.getSelectedItem().toString(), txtQuantidadePeca.getText(),
                txtQuantidadeMinima.getText(), txtQuantidadeMaxima.getText(),
                txtfValorUnitario.getText());
            boolean cadastroSucedido = DaoProduto.cadastrarPeca(prod);
            if (cadastroSucedido) {
                atualizarTabela(prod);
                verificarCodigoProduto();
            }
        }        
    }

    private boolean validarCampos() {
        if (txtCodigoPeca.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Código do Produto em branco.\n\n"
                    + "Informe corretamente o Código do Produto a ser cadastrado.", "Erro - Código do Produto Inválido", 0);
            txtCodigoPeca.requestFocus();
            return false;
        } else if (this.existeProduto) {
            JOptionPane.showMessageDialog(null, "Código do Produto já cadastrado.\n\n"
                    + "Informe um código do produto diferente.", "Erro - Código do Produto Inválido", 0);
            txtCodigoPeca.requestFocus();
            return false;
        } else if (txtNomePeca.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Nome do Produto em branco.\n\n"
                    + "Informe corretamente o Nome do Produto a ser cadastrado.", "Erro - Nome do Produto Inválido", 0);
            txtNomePeca.requestFocus();
            return false;
        } else if (txtfValorUnitario.getText().equals("0,00")) {
            JOptionPane.showMessageDialog(null, "Valor unitário do Produto zerado.\n\n"
                    + "Informe corretamente o valor unitário do Produto a ser cadastrado.", "Erro - Valor Unitário Inválido", 0);
            txtfValorUnitario.requestFocus();
            return false;
        } else if (txtQuantidadePeca.getText().equals("0")) {
            JOptionPane.showMessageDialog(null, "Quantidade do Produto zerado.\n\n"
                    + "Informe corretamente a quantidade do Produto a ser cadastrado.", "Erro - Quantidade Inválida", 0);
            txtQuantidadePeca.requestFocus();
            return false;
        } else {
            return true;
        }
    }
}
