/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.DaoEndereco;
import dao.DaoFuncionario;
import dao.DaoPessoa;
import dao.DaoServico;
import dao.DaoUsuario;
import java.awt.Color;
import java.sql.Date;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Endereco;
import model.Funcionario;
import model.Pessoa;
import model.PessoaFisica;
import model.PessoaJuridica;
import model.Servico;
import view.FrmCadastroEndereco;
import view.FrmCadastroFuncionario;
import view.FrmCadastroPessoa;

/**
 *
 * @author Luiz
 */
public class FrmCadastroServico extends javax.swing.JFrame {

    boolean cepCadastrado;
    boolean cpfCadastrado;
    boolean cnpjCadastrado;
    boolean servCadastrado;
    Endereco endExibicao;
    PessoaFisica pessoaFisicaExibicao;
    PessoaJuridica pessoaJuridicaExibicao;
    Pessoa pessoaExibicao;
    boolean flagFuncionario;
    Funcionario f = new Funcionario();

    public FrmCadastroServico() {
        initComponents();
        modoFisica();
        txtDataServico.setText("" + new Date(Calendar.getInstance().getTimeInMillis()));
        btnOrcamento.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngTipoCliente = new javax.swing.ButtonGroup();
        db = new javax.swing.JFileChooser();
        grupoSexo = new javax.swing.ButtonGroup();
        lblCampoCpfCnpj = new javax.swing.JLabel();
        lblExisteServico = new javax.swing.JLabel();
        lblCep = new javax.swing.JLabel();
        txtCep = new javax.swing.JTextField();
        txtCpfCnpj = new javax.swing.JTextField();
        lblCep1 = new javax.swing.JLabel();
        txtDataServico = new javax.swing.JTextField();
        lblCpfCnpjExiste = new javax.swing.JLabel();
        lblCepExiste = new javax.swing.JLabel();
        btnCadastrarCep = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rbtFisica = new javax.swing.JRadioButton();
        rbtJuridica = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        lblSelecionarFunc = new javax.swing.JLabel();
        btnArquivoRelatorio = new javax.swing.JButton();
        lblRelatorio = new javax.swing.JLabel();
        lblCep2 = new javax.swing.JLabel();
        txtCodFunc = new javax.swing.JTextField();
        lblCep3 = new javax.swing.JLabel();
        txtNomeFunc = new javax.swing.JTextField();
        btnOrcamento = new javax.swing.JButton();
        txtLimpar = new javax.swing.JButton();
        txtCadastrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblNomeFicticio = new javax.swing.JLabel();
        txtNomePessoaFicticio = new javax.swing.JTextField();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        lblCelularRamal = new javax.swing.JLabel();
        lblLogradouro = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        Bairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        Bairro1 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtCelularRamal = new javax.swing.JTextField();
        lblRazaoSocial = new javax.swing.JLabel();
        txtRazaoSocial = new javax.swing.JTextField();
        lblSexo = new javax.swing.JLabel();
        rbtMasculino = new javax.swing.JRadioButton();
        rbtFeminino = new javax.swing.JRadioButton();
        cmbTipoServico = new javax.swing.JComboBox<>();
        btnCadastrarPessoaJ = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCodigoServico = new javax.swing.JTextField();
        lblCodigoServico = new javax.swing.JLabel();
        btnListarFunc = new javax.swing.JButton();
        btnListarServico = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFuncSelecionados = new javax.swing.JTable();
        btnListarFunc1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1152, 648));
        setMinimumSize(new java.awt.Dimension(1152, 648));
        getContentPane().setLayout(null);

        lblCampoCpfCnpj.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCampoCpfCnpj.setText("CPF:");
        getContentPane().add(lblCampoCpfCnpj);
        lblCampoCpfCnpj.setBounds(760, 120, 60, 50);

        lblExisteServico.setText("Código livre.");
        getContentPane().add(lblExisteServico);
        lblExisteServico.setBounds(210, 90, 210, 14);

        lblCep.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCep.setText("CEP:");
        getContentPane().add(lblCep);
        lblCep.setBounds(430, 120, 60, 50);

        txtCep.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        txtCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCepActionPerformed(evt);
            }
        });
        txtCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCepKeyReleased(evt);
            }
        });
        getContentPane().add(txtCep);
        txtCep.setBounds(510, 130, 240, 30);

        txtCpfCnpj.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        txtCpfCnpj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfCnpjActionPerformed(evt);
            }
        });
        txtCpfCnpj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCpfCnpjKeyReleased(evt);
            }
        });
        getContentPane().add(txtCpfCnpj);
        txtCpfCnpj.setBounds(840, 130, 250, 30);

        lblCep1.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCep1.setText("Data de Cadastro:");
        getContentPane().add(lblCep1);
        lblCep1.setBounds(770, 50, 160, 50);

        txtDataServico.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        getContentPane().add(txtDataServico);
        txtDataServico.setBounds(940, 60, 150, 30);

        lblCpfCnpjExiste.setText("CPF Inválido");
        getContentPane().add(lblCpfCnpjExiste);
        lblCpfCnpjExiste.setBounds(840, 160, 190, 14);

        lblCepExiste.setText("Cep inválido.");
        getContentPane().add(lblCepExiste);
        lblCepExiste.setBounds(510, 160, 180, 14);

        btnCadastrarCep.setText("Cadastrar");
        btnCadastrarCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarCepActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrarCep);
        btnCadastrarCep.setBounds(650, 160, 100, 23);

        jLabel4.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel4.setText("Tipo de Cliente:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 120, 160, 50);

        btngTipoCliente.add(rbtFisica);
        rbtFisica.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        rbtFisica.setSelected(true);
        rbtFisica.setText("Física");
        rbtFisica.setOpaque(false);
        rbtFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFisicaActionPerformed(evt);
            }
        });
        getContentPane().add(rbtFisica);
        rbtFisica.setBounds(210, 130, 75, 33);

        btngTipoCliente.add(rbtJuridica);
        rbtJuridica.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        rbtJuridica.setText("Jurídica");
        rbtJuridica.setOpaque(false);
        rbtJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtJuridicaActionPerformed(evt);
            }
        });
        getContentPane().add(rbtJuridica);
        rbtJuridica.setBounds(310, 130, 89, 33);

        jLabel5.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel5.setText("Relatório do serviço:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(540, 400, 170, 30);

        lblSelecionarFunc.setText("Inválido");
        getContentPane().add(lblSelecionarFunc);
        lblSelecionarFunc.setBounds(250, 430, 250, 14);

        btnArquivoRelatorio.setText("Procurar");
        btnArquivoRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArquivoRelatorioActionPerformed(evt);
            }
        });
        getContentPane().add(btnArquivoRelatorio);
        btnArquivoRelatorio.setBounds(720, 400, 80, 30);

        lblRelatorio.setText("Nenhum arquivo selecionado.");
        getContentPane().add(lblRelatorio);
        lblRelatorio.setBounds(820, 410, 270, 14);

        lblCep2.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCep2.setText("Código do Funcionário:");
        getContentPane().add(lblCep2);
        lblCep2.setBounds(40, 400, 190, 30);

        txtCodFunc.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        txtCodFunc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodFuncKeyReleased(evt);
            }
        });
        getContentPane().add(txtCodFunc);
        txtCodFunc.setBounds(240, 400, 120, 30);

        lblCep3.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCep3.setText("Funcionário requisitado:");
        getContentPane().add(lblCep3);
        lblCep3.setBounds(40, 460, 200, 30);

        txtNomeFunc.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        getContentPane().add(txtNomeFunc);
        txtNomeFunc.setBounds(240, 460, 490, 30);

        btnOrcamento.setText("Criar orçamento");
        btnOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrcamentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnOrcamento);
        btnOrcamento.setBounds(990, 590, 130, 40);

        txtLimpar.setText("Limpar");
        getContentPane().add(txtLimpar);
        txtLimpar.setBounds(1000, 510, 110, 40);

        txtCadastrar.setText("Ativar serviço");
        txtCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(txtCadastrar);
        txtCadastrar.setBounds(1000, 550, 110, 40);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Pessoa"));
        jPanel2.setOpaque(false);

        lblNomeFicticio.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblNomeFicticio.setText("Nome");

        txtNomePessoaFicticio.setEditable(false);

        lblTelefone.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblTelefone.setText("Telefone");

        txtTelefone.setEditable(false);

        lblCelularRamal.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCelularRamal.setText("Celular");

        lblLogradouro.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblLogradouro.setText("Logradouro");

        txtLogradouro.setEditable(false);

        lblCidade.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCidade.setText("Cidade");

        txtCidade.setEditable(false);

        lblEstado.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblEstado.setText("Estado");

        txtEstado.setEditable(false);

        Bairro.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        Bairro.setText("Bairro");

        txtBairro.setEditable(false);

        Bairro1.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        Bairro1.setText("N°");

        txtNumero.setEditable(false);

        txtCelularRamal.setEditable(false);

        lblRazaoSocial.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblRazaoSocial.setText("Razão Social");

        txtRazaoSocial.setEditable(false);

        lblSexo.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblSexo.setText("Sexo");

        grupoSexo.add(rbtMasculino);
        rbtMasculino.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        rbtMasculino.setSelected(true);
        rbtMasculino.setText("Masculino");
        rbtMasculino.setEnabled(false);
        rbtMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtMasculinoActionPerformed(evt);
            }
        });

        grupoSexo.add(rbtFeminino);
        rbtFeminino.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        rbtFeminino.setText("Feminino");
        rbtFeminino.setEnabled(false);
        rbtFeminino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtFemininoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                            .add(lblNomeFicticio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(txtNomePessoaFicticio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                            .add(lblCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(txtCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(lblEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(txtEstado)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(lblTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(lblRazaoSocial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtRazaoSocial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(62, 62, 62)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel2Layout.createSequentialGroup()
                                        .add(Bairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .add(lblLogradouro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(27, 27, 27)))
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel2Layout.createSequentialGroup()
                                        .add(txtBairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(Bairro1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(txtNumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(txtLogradouro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(lblCelularRamal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(txtCelularRamal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(lblSexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(26, 26, 26)
                        .add(rbtMasculino)
                        .add(18, 18, 18)
                        .add(rbtFeminino)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblNomeFicticio)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(txtNomePessoaFicticio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblLogradouro)
                        .add(txtLogradouro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel2Layout.createSequentialGroup()
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(lblCidade)
                                .add(txtCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(18, 18, 18))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(lblEstado)
                                .add(txtEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(18, 18, 18)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(Bairro)
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(txtBairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(Bairro1)
                                .add(txtNumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTelefone)
                    .add(txtTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCelularRamal)
                    .add(txtCelularRamal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblRazaoSocial)
                            .add(txtRazaoSocial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel2Layout.createSequentialGroup()
                            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(rbtFeminino, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(rbtMasculino, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(12, 12, 12)))
                    .add(lblSexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(40, 200, 1060, 190);

        cmbTipoServico.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        cmbTipoServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Preventivo", "Corretivo", "Emergencial" }));
        cmbTipoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoServicoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTipoServico);
        cmbTipoServico.setBounds(580, 60, 170, 30);

        btnCadastrarPessoaJ.setText("Cadastrar");
        btnCadastrarPessoaJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarPessoaJActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrarPessoaJ);
        btnCadastrarPessoaJ.setBounds(1000, 160, 81, 23);

        jLabel3.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel3.setText("Tipo de serviço:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(420, 50, 160, 50);

        txtCodigoServico.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        txtCodigoServico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoServicoKeyReleased(evt);
            }
        });
        getContentPane().add(txtCodigoServico);
        txtCodigoServico.setBounds(210, 60, 180, 30);

        lblCodigoServico.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        lblCodigoServico.setText("Código do serviço: ");
        getContentPane().add(lblCodigoServico);
        lblCodigoServico.setBounds(40, 50, 160, 50);

        btnListarFunc.setText("Listar Funcionários");
        btnListarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarFuncActionPerformed(evt);
            }
        });
        getContentPane().add(btnListarFunc);
        btnListarFunc.setBounds(60, 430, 140, 30);

        btnListarServico.setText("Listar Serviços");
        btnListarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarServicoActionPerformed(evt);
            }
        });
        getContentPane().add(btnListarServico);
        btnListarServico.setBounds(60, 90, 130, 23);

        tblFuncSelecionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblFuncSelecionados);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 500, 680, 120);

        btnListarFunc1.setText("Selecionar Funcionário");
        btnListarFunc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarFunc1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnListarFunc1);
        btnListarFunc1.setBounds(380, 400, 140, 30);

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fundo.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(1152, 648));
        jLabel1.setMinimumSize(new java.awt.Dimension(1152, 648));
        jLabel1.setPreferredSize(new java.awt.Dimension(1152, 648));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1150, 650);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbtFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFisicaActionPerformed
        modoFisica();
    }//GEN-LAST:event_rbtFisicaActionPerformed

    private void rbtJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtJuridicaActionPerformed
        modoJuridica();
    }//GEN-LAST:event_rbtJuridicaActionPerformed

    private void btnCadastrarCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarCepActionPerformed
        FrmCadastroEndereco telaCep = new FrmCadastroEndereco();
        telaCep.setVisible(true);
    }//GEN-LAST:event_btnCadastrarCepActionPerformed

    private void txtCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCepActionPerformed

    private void txtCepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCepKeyReleased
//        if ((txtCep.getText().length() < 8) || (txtCep.getText().length() > 8)) {
//            lblCepExiste.setText("Cep Inválido.");
//            limparExibicaoEndereco();
//        } else {
//            DaoEndereco de = new DaoEndereco();
//            try {
//                cepCadastrado = de.existeEndereco(txtCep.getText());
//                if (cepCadastrado) {
//                    lblCepExiste.setText("CEP Cadastrado.");
//                    endExibicao = de.popularEndereco(txtCep.getText());
//                    popularExibicaoEndereco(endExibicao);
//                    if (rbtFisica.isSelected()) {
//                        popularExibicaoPessoa(pessoaFisicaExibicao);
//                    } else if (rbtJuridica.isSelected()) {
//                        popularExibicaoPessoaJuridica(pessoaJuridicaExibicao);
//                    }
//                } else {
//                    lblCepExiste.setText("CEP Inexistente.");
//                    limparExibicaoEndereco();
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(FrmCadastroPessoa.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(FrmCadastroPessoa.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_txtCepKeyReleased

    private void btnCadastrarPessoaJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarPessoaJActionPerformed
        if (rbtFisica.isSelected()) {
            FrmCadastroPessoa telaCadP = new FrmCadastroPessoa(false);
            telaCadP.setVisible(true);
        } else if (rbtJuridica.isSelected()) {
            FrmCadastroPessoa telaCadP = new FrmCadastroPessoa(true);
            telaCadP.setVisible(true);
        }
    }//GEN-LAST:event_btnCadastrarPessoaJActionPerformed

    private void btnArquivoRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArquivoRelatorioActionPerformed
        FileFilter ft1 = new FileNameExtensionFilter("Documentos do Word", "docx");
        FileFilter ft2 = new FileNameExtensionFilter("Arquivos de texto", "txt");
        db.addChoosableFileFilter(ft1);
        db.addChoosableFileFilter(ft2);

        int returnVal = db.showOpenDialog(this);

        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = db.getSelectedFile();
            String fileConvert = file.toString();
            lblRelatorio.setText(" " + fileConvert + " ");
        }
    }//GEN-LAST:event_btnArquivoRelatorioActionPerformed

    private void txtCpfCnpjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfCnpjActionPerformed

    }//GEN-LAST:event_txtCpfCnpjActionPerformed

    private void txtCpfCnpjKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfCnpjKeyReleased
        if (rbtFisica.isSelected()) {
            if ((txtCpfCnpj.getText().length() < 11) || (txtCpfCnpj.getText().length() > 11)) {
                lblCpfCnpjExiste.setText("CPF Inválido");
                limparExibicaoPessoa();
            } else {
                DaoPessoa dp = new DaoPessoa();
                try {
                    cpfCadastrado = dp.existePessoaFisica(txtCpfCnpj.getText());
                    if (cpfCadastrado) {
                        lblCpfCnpjExiste.setText("CPF Cadastrado");
                        pessoaFisicaExibicao = dp.popularPessoaFisica(txtCpfCnpj.getText(), txtCep.getText());
                        popularExibicaoPessoa(pessoaFisicaExibicao);
                    } else {
                        lblCpfCnpjExiste.setText("CPF Inexistente");
                        limparExibicaoPessoa();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FrmCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FrmCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (rbtJuridica.isSelected()) {
            if ((txtCpfCnpj.getText().length() < 14) || (txtCpfCnpj.getText().length() > 14)) {
                lblCpfCnpjExiste.setText("CNPJ Inválido");
                limparExibicaoPessoa();
            } else {
                DaoPessoa dp = new DaoPessoa();
                try {
                    cnpjCadastrado = dp.existePessoaJuridica(txtCpfCnpj.getText());
                    if (cnpjCadastrado) {
                        lblCpfCnpjExiste.setText("CNPJ Cadastrado");
                        pessoaJuridicaExibicao = dp.popularPessoaJuridica(txtCpfCnpj.getText(), txtCep.getText());
                        popularExibicaoPessoaJuridica(pessoaJuridicaExibicao);
                    } else {
                        lblCpfCnpjExiste.setText("CNPJ Inexistente");
                        limparExibicaoPessoaJuridica();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FrmCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FrmCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_txtCpfCnpjKeyReleased

    private void txtCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCadastrarActionPerformed
        if (cepCadastrado && flagFuncionario && (cnpjCadastrado || cpfCadastrado)) {
            Servico serv = new Servico(Integer.parseInt(txtCodigoServico.getText()), cmbTipoServico.getSelectedItem().toString(),
                    Date.valueOf(txtDataServico.getText()), rbtJuridica.isSelected(), txtCpfCnpj.getText(), txtCpfCnpj.getText(), f, "Teste", true);
            DaoServico dao = new DaoServico();
            try {
                dao.cadastrarServico(serv.getCnpjCliente(), serv.getFuncionario().getCodigoFuncionario(), serv.getCodigoServico(), serv.getTipoServico(), 
                        serv.isTipoCliente(),serv.getDescricaoServicoFILE(), serv.getDataServico(), serv.isStatusServico());
                } catch (SQLException ex) {
                Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Erro! Preencha os campos corretamente.");
        }


    }//GEN-LAST:event_txtCadastrarActionPerformed

    private void txtCodFuncKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodFuncKeyReleased
        try {
            flagFuncionario = DaoFuncionario.existeFuncionario(Integer.parseInt(txtCodFunc.getText()));
            if (flagFuncionario) {
                f = DaoFuncionario.popularFuncionario(Integer.parseInt(txtCodFunc.getText()));
                txtNomeFunc.setText(f.getPessoa().getNome());
                lblSelecionarFunc.setText("Funcionário Livre");
                flagFuncionario = true;
                if (DaoServico.isFuncionarioEmServico(Integer.parseInt(txtCodFunc.getText()))) {
                    lblSelecionarFunc.setText("Funcionário já vinculado a outro serviço");
                    flagFuncionario = false;
                }
            } else {
                txtNomeFunc.setText("");
                lblSelecionarFunc.setText("Funcionário Inexistente");
                flagFuncionario = false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCodFuncKeyReleased

    private void btnListarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarFuncActionPerformed
        FrmListagemFuncionario tela = new FrmListagemFuncionario();
        tela.setVisible(true);
    }//GEN-LAST:event_btnListarFuncActionPerformed

    private void txtCodigoServicoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoServicoKeyReleased
        DaoServico dao = new DaoServico();
        try {
            if (txtCodigoServico.getText().length()<1){
                lblExisteServico.setText("Código inválido.");
                lblExisteServico.setForeground(Color.red);
                servCadastrado = false;
            } else if (dao.existeServico(Integer.parseInt(txtCodigoServico.getText()))) {
                lblExisteServico.setText("Código já cadastrado.");
                lblExisteServico.setForeground(Color.red);
                servCadastrado = false;
            } else {
                lblExisteServico.setText("Código livre.");
                lblExisteServico.setForeground(Color.black);
                servCadastrado = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCodigoServicoKeyReleased

    private void cmbTipoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoServicoActionPerformed
        if (cmbTipoServico.getSelectedIndex() == 0) {
            btnOrcamento.setEnabled(false);
        } else {
            btnOrcamento.setEnabled(true);
        }
    }//GEN-LAST:event_cmbTipoServicoActionPerformed

    private void btnOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrcamentoActionPerformed
        Servico s = new Servico();
        s.setCodigoServico(Integer.parseInt(txtCodigoServico.getText()));
        try {
            if (DaoServico.verificarServicoAtivo(s.getCodigoServico())){
                FrmCadastroOrcamento telaCadOrcamento = new FrmCadastroOrcamento();
                telaCadOrcamento.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Serviço ainda não está ativado. Ative-o para gerar um orçamento para o mesmo.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmCadastroServico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOrcamentoActionPerformed

    private void rbtMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtMasculinoActionPerformed

    }//GEN-LAST:event_rbtMasculinoActionPerformed

    private void rbtFemininoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtFemininoActionPerformed

    }//GEN-LAST:event_rbtFemininoActionPerformed

    private void btnListarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarServicoActionPerformed
        FrmListagemServico listaserv = new FrmListagemServico();
        listaserv.setVisible(true);
    }//GEN-LAST:event_btnListarServicoActionPerformed

    private void btnListarFunc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarFunc1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnListarFunc1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroServico().setVisible(true);
            }
        });
    }

    public void modoFisica() {
        lblCampoCpfCnpj.setText("CPF");
        txtRazaoSocial.setVisible(false);
        lblRazaoSocial.setVisible(false);
        lblNomeFicticio.setText("Nome");
        lblCelularRamal.setText("Celular");
        lblSexo.setVisible(true);
        rbtFeminino.setVisible(true);
        rbtMasculino.setVisible(true);
    }

    public void modoJuridica() {
        lblCampoCpfCnpj.setText("CNPJ");
        txtRazaoSocial.setVisible(true);
        lblRazaoSocial.setVisible(true);
        lblNomeFicticio.setText("Nome Fictício");
        lblCelularRamal.setText("Ramal");
        lblSexo.setVisible(false);
        rbtFeminino.setVisible(false);
        rbtMasculino.setVisible(false);
    }

    public void popularExibicaoEndereco(Endereco end) {
        txtLogradouro.setText(end.getLogradouro());
        txtCidade.setText(end.getCidade());
        txtBairro.setText(end.getBairro());
        txtEstado.setText(end.getEstado());
    }

    public void limparExibicaoEndereco() {
        txtLogradouro.setText("");
        txtCidade.setText("");
        txtBairro.setText("");
        txtEstado.setText("");
    }

    public void popularExibicaoPessoa(PessoaFisica pf) {
        txtNomePessoaFicticio.setText(pf.getPessoa().getNome());
        txtLogradouro.setText(pf.getPessoa().getEndereco().getLogradouro());
        txtCidade.setText(pf.getPessoa().getEndereco().getCidade());
        txtEstado.setText(pf.getPessoa().getEndereco().getEstado());
        txtBairro.setText(pf.getPessoa().getEndereco().getBairro());
        txtNumero.setText(pf.getPessoa().getComplementoLogradouro());
        txtTelefone.setText("" + pf.getPessoa().getTelefone());
        txtCelularRamal.setText("" + pf.getCelular());
        
        if(pf.getSexo() == 0) {
            rbtMasculino.setSelected(true);
        } else {
            rbtFeminino.setSelected(true);
        }

    }

    public void popularExibicaoPessoaJuridica(PessoaJuridica pj) {
        txtNomePessoaFicticio.setText(pj.getPessoa().getNome());
        txtLogradouro.setText(pj.getPessoa().getEndereco().getLogradouro());
        txtCidade.setText(pj.getPessoa().getEndereco().getCidade());
        txtEstado.setText(pj.getPessoa().getEndereco().getEstado());
        txtBairro.setText(pj.getPessoa().getEndereco().getBairro());
        txtNumero.setText(pj.getPessoa().getComplementoLogradouro());
        txtTelefone.setText("" + pj.getPessoa().getTelefone());
        txtCelularRamal.setText("" + pj.getRamalCliente());
        txtRazaoSocial.setText(pj.getRazaoSocial());
        

    }

    public void limparExibicaoPessoa() {
        txtNomePessoaFicticio.setText("");
        txtLogradouro.setText("");
        txtCidade.setText("");
        txtEstado.setText("");
        txtBairro.setText("");
        txtNumero.setText("");
        txtTelefone.setText("");
        txtCelularRamal.setText("");

    }

    public void limparExibicaoPessoaJuridica() {
        txtNomePessoaFicticio.setText("");
        txtLogradouro.setText("");
        txtCidade.setText("");
        txtEstado.setText("");
        txtBairro.setText("");
        txtNumero.setText("");
        txtTelefone.setText("");
        txtCelularRamal.setText("");
        txtRazaoSocial.setText("");

    }
    
    public void reiniciarTabela(){
        String[] nomeColunas = {"Código", "Nome"
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bairro;
    private javax.swing.JLabel Bairro1;
    private javax.swing.JButton btnArquivoRelatorio;
    private javax.swing.JButton btnCadastrarCep;
    private javax.swing.JButton btnCadastrarPessoaJ;
    private javax.swing.JButton btnListarFunc;
    private javax.swing.JButton btnListarFunc1;
    private javax.swing.JButton btnListarServico;
    private javax.swing.JButton btnOrcamento;
    private javax.swing.ButtonGroup btngTipoCliente;
    private javax.swing.JComboBox<String> cmbTipoServico;
    private javax.swing.JFileChooser db;
    private javax.swing.ButtonGroup grupoSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCampoCpfCnpj;
    private javax.swing.JLabel lblCelularRamal;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCep1;
    private javax.swing.JLabel lblCep2;
    private javax.swing.JLabel lblCep3;
    private javax.swing.JLabel lblCepExiste;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblCodigoServico;
    private javax.swing.JLabel lblCpfCnpjExiste;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblExisteServico;
    private javax.swing.JLabel lblLogradouro;
    private javax.swing.JLabel lblNomeFicticio;
    private javax.swing.JLabel lblRazaoSocial;
    private javax.swing.JLabel lblRelatorio;
    private javax.swing.JLabel lblSelecionarFunc;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JRadioButton rbtFeminino;
    private javax.swing.JRadioButton rbtFisica;
    private javax.swing.JRadioButton rbtJuridica;
    private javax.swing.JRadioButton rbtMasculino;
    private javax.swing.JTable tblFuncSelecionados;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JButton txtCadastrar;
    private javax.swing.JTextField txtCelularRamal;
    private javax.swing.JTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtCodFunc;
    private javax.swing.JTextField txtCodigoServico;
    private javax.swing.JTextField txtCpfCnpj;
    private javax.swing.JTextField txtDataServico;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JButton txtLimpar;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNomeFunc;
    private javax.swing.JTextField txtNomePessoaFicticio;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtRazaoSocial;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
